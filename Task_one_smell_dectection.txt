Smell detection one:
Name:  Switch case
Location: Assignment two V1\ MainMenu.py\class Menu\start_menu()\lines 21-50
Reasons:
1.  It repeating the same code of 'if conditions'. e.g. if user_input ==1: #do something,  if user_input== 2:  etc.  
2. Makes the method longer than 10 lines
3. If you make a mistake it harder to fix.
Stratgies/approaches: 
From the refactoring guru there were many ways to fixed this bad smell, I going to extract the method and move method field by deleting duplicated code.
Smell detection two:




Name: Long method
Location: Assignment two V1\model\uml_interpreter\class Umlnterperter\uml_decorder()\lines 8-28
Reasons:
1. A method should contain less than ten lines of code
2. Having loops and conditions can make methods longer than it should
3. It harder to read when you testing and harder to divide it into smaller methods
Stratgies/approaches:
From reading the refactoring guru website, the approach I could use is to use either the Decompose Conditional or Extract method. This is because in my method, the problem is that it contains for loops and conditions which make my method a lot bigger than it should be. 
Smell detection three:



Name: Duplicated code
Location: Assignment two V1\model\uml_interpreter\class Umlnterperter\uml_method(), uml_attributes()\lines 35 &39
Reasons:
1. Both have the same code in each method
2. It creates a larger class
3. The programmer is too lazy to fixed and do another way to solve the problem.
Stratgies/approaches:
From reading the refactoring guru, the best approach for this ball smell is to use Extract method, so that each method can grab the code it need for it job. 